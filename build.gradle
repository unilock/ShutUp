plugins {
	alias libs.plugins.quilt.loom
	id 'maven-publish'
}

version = "${project.version}+${libs.versions.minecraft.get()}+quilt"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://mvn.devos.one/releases/" }

	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven/"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "CurseForge"
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}

	maven { url = "https://jitpack.io/" }
}

loom {
    mods {
		"shutup" {
			sourceSet("main")
		}
	}
}

dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api

	modImplementation "io.github.fabricators_of_create.Porting-Lib:obj_loader:2.3.4+1.20.1"
	modImplementation "maven.modrinth:aurorasdecorations:1.0.0-beta.22+1.20.1"
	modImplementation "maven.modrinth:jsonpatcher:1.0.0-beta.4+mc.1.20.1"
	modImplementation "curse.maven:loot-integrations-580689:5349561"
	modImplementation "maven.modrinth:nbt-autocomplete:q6DMfyr0"

	// sigh...
	implementation "maven.modrinth:dynamicsurroundingsfabric:0.3.3"
	annotationProcessor "com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.2.0-beta.4"
	implementation "com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.2.0-beta.4"
	include "com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.2.0-beta.4"
}

processResources {
	inputs.properties "version": project.version, "group": project.group

	filesMatching("quilt.mod.json") {
		expand "version": project.version, "group": project.group
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
